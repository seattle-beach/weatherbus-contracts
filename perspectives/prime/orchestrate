#!/usr/bin/env ruby
require 'net/http'
require 'tempfile'

def started
  Net::HTTP.get(URI('http://localhost:8080/healthcheck')) == 'ok'
  rescue Errno::ECONNREFUSED
    false
end

orig_dir = Dir.pwd
Dir.chdir('../weatherbus')
puts 'Building weatherbus'
if !system('./gradlew', 'build', {:out => '/dev/null'})
  exit(1)
end

if started
  puts 'There is already a running weatherbus.'
  exit(1)
end

puts 'Starting weatherbus'
outfile = Tempfile.new('weatherbus')
pids = {}
pids['weatherbus'] = spawn('java', '-jar',
            'build/libs/weatherbus-SNAPSHOT.jar',
            '--spring.profiles.active=goldengardens',
            {:out => outfile, :err => outfile })
Dir.chdir(orig_dir) 
puts 'Starting mock bus service'
pids['mock bus'] = spawn(*['../golden-gardens/mock-server',
                    '9000',
                    Dir['contracts/bus/*.json'],
                    '-r',
                    'perspectives/prime/bus-responses/stop.json'
                    ].flatten,
                    {:out => outfile, :err => outfile })

begin
  puts 'Waiting for weatherbus to start'
  
  while !started
    if Process.waitpid(pids['weatherbus'], Process::WNOHANG)
      pids.delete('weatherbus')
      puts 'weatherbus exited unexpectedly'
      exit(1)
    end

    sleep 1
  end

  if !system('perspectives/prime/verify-contracts')
    puts "Weatherbus output is logged to #{outfile.path}"
    ObjectSpace.undefine_finalizer(outfile)
    exit(1)
  end
ensure
  pids.each do |name, pid|
    puts "Stopping #{name}"
    Process.kill('TERM', pid)
    Process.waitpid(pid)
  end
end
